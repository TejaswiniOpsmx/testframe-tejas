#########  Spinnaker Credentials  ############################
url=http://testframeappledeck.cve.apple.opsmx.net/gate/
username=aman.agrawal@opsmx.io
password=Welcome@2023
authn=true

#url=http://applespingate1.cve.apple.opsmx.net/
#authn=false

#########  TestCase Enabled/Disabled  ############################
createApplication=enabled
addEmailAndSlackNotificationForApplication=enabled
createPipelineWithCronTrigger=enabled
updateCronPipeline=enabled
createPipelineWithDeployStage=enabled
createPipelineWithJenkinsTrigger=enabled
createPipelineWithGitTrigger=enabled
createPipelineWithDockerRegistryTrigger=enabled
createPipelineWithJenkinsBuildAndDeploy=enabled
createPipelineWithHelmDeployment=enabled
createPipelineWithKustomizeDeployment=enabled
createPipelineWithEC2Deployment=enabled
createPipelineWithECSDeployment=enabled
executePipeline=enabled
updateApplication=enabled
deleteSpinnakerApplication=enabled

#########  AWS Credentials  ############################
aws_access_key=ur_access_key
aws_secret_key=ur_secret_key
s3_bucket_to_store_report=opsmx-terraform-state

#########  Jenkins ############################
master=accountjenkins1
job=Spin-canary-issuegen-build-Deploy-demo
propertyFile=file.properties
jenkinsBuildStageName=JenkinsBuild

jenkinsBuildAppName=jenkins-app
jenkinsBuildDeleteAppName=deployment jenkins-app
jenkinsBuildImage=quay.io/opsmxpublic/canary-issuegen:${#stage("JenkinsBuild")["context"]["Buildnumber"]}

#########  Notifications ############################
emailNotificationAddress=aman.agrawal@opsmx.io
slackNotificationAddress=notifications

startedMsg= started successfully
completedMsg= ended successfully
failureMsg= ended with a failure
awaitingManualJudgementMsg= is awaiting manual judgement
continueManualJudgementMsg= was judged to continue
stopManualJudgementMsg= was judged to stop

#########  Triggers ############################
webhookSource=testframe
# Git Trigger
githubBranch=master
githubProject=aman-agrawal
githubSlug=demo
githubSource=github

#########  App  ############################
appEmail=aman.agrawal@opsmx.io
appName=hiiamandemo2
appDescription=Create test Application
updatedAppDescription=Updated test Application
#########  App Permission Groups ############################
rbacStatus=enabled
readGroup=rogroup
writeGroup=rogroup
executeGroup=rogroup

#########  Pipeline  ############################
deployPipelineName=deployPipeline
cronPipelineName=cronPipeline
updatedCronPipelineName=updatedCronPipeline
jenkinsTriggerPipelineName=jenkinsPipeline
gitTriggerPipelineName=gitTriggerPipeline
dockerRegistryTriggerPipelineName=dockerRegistryPipeline
jenkinsBuildAndDeployPipelineName=jenkinsBuildAndDeployPipeline
ec2DeploymentPipelineName=ec2DeploymentPipeline
ecsDeploymentPipelineName=ecsDeploymentPipeline
helmDeploymentPipelineName=helmDeploymentPipeline
kustomizeDeploymentPipelineName=kustomizeDeploymentPipeline

#########  Stages  ############################
deployManifestStageName=deployManifestStage
deleteManifestStageName=deleteManifestStage
waitStageName=waitStage
bakeStageName=bakeStage
shortWaitStagePeriod=2
waitStagePeriod=60

#########  Kubernetes  ############################
k8sAccountName=default
k8sNamespace=testframe
k8sDeploymentImage=nginx-deployment
k8sDeploymentImageVersion=nginx:1.15.4
k8sDeploymentApp=nginx
#########  Docker Registry  ############################
dockerAccountName=jfrog-docker
dockerRegistryName=opsmx.jfrog.io
dockerRegistryOrganization=restapp
dockerRegistryImage=restapp/simpleapp

#########  Cron  ############################
cronExpression=0 0/5 * 1/1 * ? *

#########  EC2  ############################
# Bake Stage
baseAmi=ami-06ae296e502d24311
baseLabel=release
baseName=ops-ubuntu14-java-1
baseOs=trusty
cloudProviderType=aws
bakeName=bake
package=restapp
rebakeStatus=true
awsRegion=us-east-1
skipRegionDetection=true
storeType=ebs
type=bake
user=admin
vmType=hvm
# Deploy Stage
ec2Account=aws-isd-account
associatePublicIpAddressStatus=true
us-east-1a=us-east-1a
us-east-1b=us-east-1b
us-east-1c=us-east-1c
us-east-1d=us-east-1d
us-east-1e=us-east-1e
us-east-1f=us-east-1f
lbName=varshinitest-vates-lb
instanceType=t2.nano

# Destroy Stage
cloudProvider=aws
detail=stack
stack=new
us-east-1=us-east-1
ec2_destroyStage_target=current_asg_dynamic
ec2_destroyStage_type=destroyServerGroup
######################################################################
